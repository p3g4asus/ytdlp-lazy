diff --git a/yt-dlp/yt_dlp/postprocessor/ffmpeg.py b/yt-dlp/yt_dlp/postprocessor/ffmpeg.py
index 09eb33b8d..9e1c36b78 100644
--- a/yt-dlp/yt_dlp/postprocessor/ffmpeg.py
+++ b/yt-dlp/yt_dlp/postprocessor/ffmpeg.py
@@ -85,7 +85,7 @@ def get_versions(downloader=None):
     _version_cache, _features_cache = {}, {}
 
     def _determine_executables(self):
-        programs = ['avprobe', 'avconv', 'ffmpeg', 'ffprobe']
+        programs = ['avprobe', 'avconv', 'libffmpeg.bin.so', 'libffprobe.bin.so']
 
         def get_ffmpeg_version(path, prog):
             if path in self._version_cache:
@@ -104,7 +104,7 @@ def get_ffmpeg_version(path, prog):
                     if mobj:
                         ver = mobj.group(1)
             self._versions[prog] = self._version_cache[path] = ver
-            if prog != 'ffmpeg' or not out:
+            if prog != 'libffmpeg.bin.so' or not out:
                 return
 
             mobj = re.search(r'(?m)^\s+libavformat\s+(?:[0-9. ]+)\s+/\s+(?P<runtime>[0-9. ]+)', out)
@@ -136,9 +136,9 @@ def get_ffmpeg_version(path, prog):
                 dirname, basename = location, None
             else:
                 basename = os.path.splitext(os.path.basename(location))[0]
-                basename = next((p for p in programs if basename.startswith(p)), 'ffmpeg')
+                basename = next((p for p in programs if basename.startswith(p)), 'libffmpeg.bin.so')
                 dirname = os.path.dirname(os.path.abspath(location))
-                if basename in ('ffmpeg', 'ffprobe'):
+                if basename in ('libffmpeg.bin.so', 'libffprobe.bin.so'):
                     prefer_ffmpeg = True
 
             self._paths = {
@@ -148,7 +148,7 @@ def get_ffmpeg_version(path, prog):
 
         self._versions = {}
         # NB: probe must be first for _features to be poulated correctly
-        executables = {'probe_basename': ('ffprobe', 'avprobe'), 'basename': ('ffmpeg', 'avconv')}
+        executables = {'probe_basename': ('libffprobe.bin.so', 'avprobe'), 'basename': ('libffmpeg.bin.so', 'avconv')}
         if prefer_ffmpeg is False:
             executables = {k: v[::-1] for k, v in executables.items()}
         for var, prefs in executables.items():
@@ -231,7 +231,7 @@ def get_audio_codec(self, path):
         return None
 
     def get_metadata_object(self, path, opts=[]):
-        if self.probe_basename != 'ffprobe':
+        if self.probe_basename != 'libffprobe.bin.so':
             if self.probe_available:
                 self.report_warning('Only ffprobe is supported for metadata extraction')
             raise PostProcessingError('ffprobe not found. Please install or provide the path using --ffmpeg-location')
@@ -291,7 +291,7 @@ def real_run_ffmpeg(self, input_path_opts, output_path_opts, *, expected_retcode
 
         cmd = [encodeFilename(self.executable, True), encodeArgument('-y')]
         # avconv does not have repeat option
-        if self.basename == 'ffmpeg':
+        if self.basename == 'libffmpeg.bin.so':
             cmd += [encodeArgument('-loglevel'), encodeArgument('repeat+info')]
 
         def make_args(file, args, name, number):
